

class Board():

    '''
    Board state, print board
    '''

    def __init__(self):
        self.goban =[
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','x','0','0','0','0','0','x','0','0','0','0','0','x','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','x','0','0','0','0','0','x','0','0','0','0','0','x','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','x','0','0','0','0','0','x','0','0','0','0','0','x','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ['0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'],
  ]
        
    def goban_to_print(self, case):
        if case == '0':
            return '|  '
        elif case == 'b':
            return '| 0'
        elif case == 'w':
            return '| O'
        elif case == 'x':
            return '| x'

        
    def print_board(self):
        print("  A  B  C  D  E  F  G  H  J  K  L  M  N  O  P  Q  R  S  T")
        for i in range(len(self.goban)):
            print("".join([self.goban_to_print(self.goban[i][j]) for j in range(len(self.goban[0]))]), str(i+1))

    